scalar Time
scalar JSON

type Query {
    tickets(filter: TicketFilter): [Ticket!]!
    ticket(id: ID!): Ticket
    assets(filter: AssetFilter): [Asset!]!
    asset(id: ID!): Asset
    users(filter: UserFilter): [User!]!
    user(id: ID!): User
    maintenanceSchedules(filter: MaintenanceScheduleFilter): [MaintenanceSchedule!]!
    maintenanceSchedule(id: ID!): MaintenanceSchedule
}

type Mutation {
    createTicket(input: CreateTicketInput!): Ticket!
    updateTicket(id: ID!, input: UpdateTicketInput!): Ticket!
    deleteTicket(id: ID!): Boolean!
    
    createAsset(input: CreateAssetInput!): Asset!
    updateAsset(id: ID!, input: UpdateAssetInput!): Asset!
    deleteAsset(id: ID!): Boolean!
    
    createUser(input: CreateUserInput!): User!
    updateUser(id: ID!, input: UpdateUserInput!): User!
    deleteUser(id: ID!): Boolean!
    
    createMaintenanceSchedule(input: CreateMaintenanceScheduleInput!): MaintenanceSchedule!
    updateMaintenanceSchedule(id: ID!, input: UpdateMaintenanceScheduleInput!): MaintenanceSchedule!
    deleteMaintenanceSchedule(id: ID!): Boolean!
}

type Ticket {
    id: ID!
    title: String!
    description: String!
    status: TicketStatus!
    priority: TicketPriority!
    assignedTo: User
    createdBy: User!
    asset: Asset
    createdAt: Time!
    updatedAt: Time!
    resolvedAt: Time
    comments: [Comment!]!
}

type Asset {
    id: ID!
    name: String!
    type: AssetType!
    status: AssetStatus!
    location: String!
    qrCode: String!
    purchaseDate: Time!
    lastMaintenanceDate: Time
    nextMaintenanceDate: Time
    maintenanceHistory: [MaintenanceRecord!]!
    tickets: [Ticket!]!
    metadata: JSON
}

type User {
    id: ID!
    email: String!
    name: String!
    role: UserRole!
    assignedTickets: [Ticket!]!
    createdTickets: [Ticket!]!
    createdAt: Time!
    updatedAt: Time!
}

type MaintenanceSchedule {
    id: ID!
    asset: Asset!
    frequency: MaintenanceFrequency!
    lastPerformed: Time
    nextDue: Time!
    assignedTo: User!
    status: MaintenanceStatus!
    notes: String
    createdAt: Time!
    updatedAt: Time!
}

type MaintenanceRecord {
    id: ID!
    asset: Asset!
    performedBy: User!
    performedAt: Time!
    type: MaintenanceType!
    notes: String
    partsUsed: [PartUsage!]!
}

type PartUsage {
    id: ID!
    part: Part!
    quantity: Int!
    maintenanceRecord: MaintenanceRecord!
}

type Part {
    id: ID!
    name: String!
    description: String!
    quantity: Int!
    minimumQuantity: Int!
    location: String!
    lastRestocked: Time!
}

type Comment {
    id: ID!
    ticket: Ticket!
    user: User!
    content: String!
    createdAt: Time!
    updatedAt: Time!
}

enum TicketStatus {
    OPEN
    IN_PROGRESS
    RESOLVED
    CLOSED
    CANCELLED
}

enum TicketPriority {
    LOW
    MEDIUM
    HIGH
    CRITICAL
}

enum AssetType {
    EQUIPMENT
    FURNITURE
    ELECTRONICS
    PLUMBING
    HVAC
    OTHER
}

enum AssetStatus {
    OPERATIONAL
    MAINTENANCE_NEEDED
    OUT_OF_SERVICE
    DECOMMISSIONED
}

enum UserRole {
    ADMIN
    MANAGER
    TECHNICIAN
    STAFF
}

enum MaintenanceFrequency {
    DAILY
    WEEKLY
    MONTHLY
    QUARTERLY
    BIANNUAL
    ANNUAL
}

enum MaintenanceStatus {
    SCHEDULED
    IN_PROGRESS
    COMPLETED
    CANCELLED
    OVERDUE
}

enum MaintenanceType {
    PREVENTIVE
    CORRECTIVE
    PREDICTIVE
    CONDITION_BASED
}

input TicketFilter {
    status: TicketStatus
    priority: TicketPriority
    assignedTo: ID
    createdBy: ID
    asset: ID
}

input AssetFilter {
    type: AssetType
    status: AssetStatus
    location: String
}

input UserFilter {
    role: UserRole
    email: String
}

input MaintenanceScheduleFilter {
    status: MaintenanceStatus
    assignedTo: ID
    asset: ID
}

input CreateTicketInput {
    title: String!
    description: String!
    priority: TicketPriority!
    assignedTo: ID
    asset: ID
}

input UpdateTicketInput {
    title: String
    description: String
    status: TicketStatus
    priority: TicketPriority
    assignedTo: ID
    asset: ID
}

input CreateAssetInput {
    name: String!
    type: AssetType!
    location: String!
    purchaseDate: Time!
    metadata: JSON
}

input UpdateAssetInput {
    name: String
    type: AssetType
    status: AssetStatus
    location: String
    metadata: JSON
}

input CreateUserInput {
    email: String!
    name: String!
    role: UserRole!
}

input UpdateUserInput {
    email: String
    name: String
    role: UserRole
}

input CreateMaintenanceScheduleInput {
    asset: ID!
    frequency: MaintenanceFrequency!
    assignedTo: ID!
    notes: String
}

input UpdateMaintenanceScheduleInput {
    frequency: MaintenanceFrequency
    assignedTo: ID
    status: MaintenanceStatus
    notes: String
} 